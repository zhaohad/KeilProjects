C51 COMPILER V9.60.0.0   STEERINGSG90                                                      06/12/2022 17:30:46 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE STEERINGSG90
OBJECT MODULE PLACED IN .\Objects\SteeringSG90.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE SteeringSG90.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\SteeringSG90.lst) TABS(2) OBJECT(.\Objects\SteeringSG90.obj)

line level    source

   1          #include <reg51.h>
   2          #include "SteeringSG90.h"
   3          
   4          #define TIMERCNT_20MS 200
   5          #define TIMERCNT_0D   5
   6          #define TIMERCNT_180D 25
   7          #define TIMERCNT_ANY(D) D * (TIMERCNT_180D - TIMERCNT_0D) / TIMERCNT_180D + TIMERCNT_0D
   8          
   9          #define DEGREE_MIN 0
  10          #define DEGREE_DEFAULT 90
  11          #define DEGREE_MAX 180
  12          
  13          unsigned char g_timercnt;
  14          unsigned char g_cntH = 25;
  15          
  16          sbit P_PWM = P0 ^ 6;
  17          
  18          /*
  19           * 12MHz
  20           * 12T 8位自动重载
  21           * 100us
  22           */
  23          void initSteeringPWMTimer() {
  24   1        TMOD &= 0x0F;   //设置定时器模式
  25   1        TMOD |= 0x20;   //设置定时器模式
  26   1        TL1 = 0x9C;   //设置定时初始值
  27   1        TH1 = 0x9C;   //设置定时重载值
  28   1        TF1 = 0;    //清除TF0标志
  29   1        TR1 = 1;    //定时器0开始计时
  30   1        ET1 = 1;
  31   1        EA = 1;
  32   1        g_timercnt = 0;
  33   1        setSteeringDegree(DEGREE_DEFAULT);
  34   1      }
  35          
  36          /*
  37           * 24MHz
  38           * 12T 8位自动重载
  39           * 100us
  40           */
  41          void initSteeringPWMTimer24M12T() {
  42   1        TMOD &= 0x0F;   //设置定时器模式
  43   1        TMOD |= 0x20;   //设置定时器模式
  44   1        TL1 = 0x38;   //设置定时初始值
  45   1        TH1 = 0x38;   //设置定时重载值
  46   1        TF1 = 0;    //清除TF0标志
  47   1        TR1 = 1;    //定时器0开始计时
  48   1        ET1 = 1;
  49   1        EA = 1;
  50   1        g_timercnt = 0;
  51   1        setSteeringDegree(DEGREE_DEFAULT);
  52   1      }
  53          
  54          void setSteeringDegree(unsigned char d) {
C51 COMPILER V9.60.0.0   STEERINGSG90                                                      06/12/2022 17:30:46 PAGE 2   

  55   1        if (d > DEGREE_MAX) {
  56   2          d = DEGREE_MAX;
  57   2        }
  58   1        g_cntH = d / 9 + 5;
  59   1      }
  60          
  61          void SteeringPWMTimerInterruption() {
  62   1        ++g_timercnt;
  63   1        if (g_timercnt <= g_cntH) {
  64   2          P_PWM = 1;
  65   2        } else {
  66   2          P_PWM = 0;
  67   2        }
  68   1        
  69   1        if (g_timercnt >= TIMERCNT_20MS) {
  70   2          g_timercnt = 0;
  71   2        }
  72   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    108    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
