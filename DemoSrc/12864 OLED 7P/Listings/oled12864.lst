C51 COMPILER V9.60.0.0   OLED12864                                                         07/24/2022 17:33:49 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE OLED12864
OBJECT MODULE PLACED IN .\Objects\oled12864.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE src\oled12864.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\oled12864.lst) TABS(2) OBJECT(.\Objects\oled12864.obj)

line level    source

   1          #include "oled12864.h"
   2          #include "oled12864wordlib.h"
   3          #include "delay.h"
   4          
   5          //初始化SSD1306     
   6          void OLED_Init() {
   7   1        OLED_RST_Set();
   8   1        delay_ms(100);
   9   1        OLED_RST_Clr();
  10   1        delay_ms(100);
  11   1        OLED_RST_Set(); 
  12   1      
  13   1        OLED_WR_Byte(0xAE, OLED_CMD); //--turn off oled panel
  14   1        OLED_WR_Byte(0x00, OLED_CMD); //---set low column address
  15   1        OLED_WR_Byte(0x10, OLED_CMD); //---set high column address
  16   1        OLED_WR_Byte(0x40, OLED_CMD); //--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
  17   1        OLED_WR_Byte(0x81, OLED_CMD); //--set contrast control register
  18   1        OLED_WR_Byte(0xCF, OLED_CMD); // Set SEG Output Current Brightness
  19   1        OLED_WR_Byte(0xA1, OLED_CMD); //--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
  20   1        OLED_WR_Byte(0xC8, OLED_CMD); //Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
  21   1        OLED_WR_Byte(0xA6, OLED_CMD); //--set normal display
  22   1        OLED_WR_Byte(0xA8, OLED_CMD); //--set multiplex ratio(1 to 64)
  23   1        OLED_WR_Byte(0x3f, OLED_CMD); //--1/64 duty
  24   1        OLED_WR_Byte(0xD3, OLED_CMD); //-set display offset Shift Mapping RAM Counter (0x00~0x3F)
  25   1        OLED_WR_Byte(0x00, OLED_CMD); //-not offset
  26   1        OLED_WR_Byte(0xd5, OLED_CMD); //--set display clock divide ratio/oscillator frequency
  27   1        OLED_WR_Byte(0x80, OLED_CMD); //--set divide ratio, Set Clock as 100 Frames/Sec
  28   1        OLED_WR_Byte(0xD9, OLED_CMD); //--set pre-charge period
  29   1        OLED_WR_Byte(0xF1, OLED_CMD); //Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
  30   1        OLED_WR_Byte(0xDA, OLED_CMD); //--set com pins hardware configuration
  31   1        OLED_WR_Byte(0x12, OLED_CMD);
  32   1        OLED_WR_Byte(0xDB, OLED_CMD); //--set vcomh
  33   1        OLED_WR_Byte(0x40, OLED_CMD); //Set VCOM Deselect Level
  34   1        OLED_WR_Byte(0x20, OLED_CMD); //-Set Page Addressing Mode (0x00/0x01/0x02)
  35   1        OLED_WR_Byte(0x02, OLED_CMD); //
  36   1        OLED_WR_Byte(0x8D, OLED_CMD); //--set Charge Pump enable/disable
  37   1        OLED_WR_Byte(0x14, OLED_CMD); //--set(0x10) disable
  38   1        OLED_WR_Byte(0xA4, OLED_CMD); // Disable Entire Display On (0xa4/0xa5)
  39   1        OLED_WR_Byte(0xA6, OLED_CMD); // Disable Inverse Display On (0xa6/a7) 
  40   1        OLED_WR_Byte(0xAF, OLED_CMD); //--turn on oled panel
  41   1        OLED_WR_Byte(0xAF, OLED_CMD); /*display ON*/ 
  42   1        OLED_Clear();
  43   1        OLED_Set_Pos(0, 0);   
  44   1      }
  45          
  46          //向SSD1306写入一个字节。
  47          //dat:要写入的数据/命令
  48          //cmd:数据/命令标志 0,表示命令;1,表示数据;
  49          void OLED_WR_Byte(u8 dat, u8 cmd) { 
  50   1        u8 i;
  51   1        if(cmd) {
  52   2          OLED_DC_Set();
  53   2        } else { 
  54   2          OLED_DC_Clr();
C51 COMPILER V9.60.0.0   OLED12864                                                         07/24/2022 17:33:49 PAGE 2   

  55   2        }   
  56   1        OLED_CS_Clr();
  57   1        for(i = 0; i < 8; i++) {
  58   2          OLED_SCLK_Clr();
  59   2          if(dat & 0x80) {
  60   3            OLED_SDIN_Set();
  61   3          }
  62   2          else {
  63   3            OLED_SDIN_Clr();
  64   3          }
  65   2          OLED_SCLK_Set();
  66   2          dat <<= 1;   
  67   2        }             
  68   1        OLED_CS_Set();
  69   1        OLED_DC_Set();      
  70   1      }
  71          
  72          void OLED_Set_Pos(u8 x, u8 y) { 
  73   1        OLED_WR_Byte(0xb0 + y, OLED_CMD);
  74   1        OLED_WR_Byte(((x & 0xf0) >> 4) | 0x10, OLED_CMD);
  75   1        OLED_WR_Byte((x & 0x0f) | 0x01, OLED_CMD); 
  76   1      }
  77          
  78          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
  79          void OLED_Clear() {
  80   1        u8 i, n;
  81   1        for(i = 0; i < 8; i++) {  
  82   2          OLED_WR_Byte(0xb0 + i, OLED_CMD);    //设置页地址（0~7）
  83   2          OLED_WR_Byte(0x00, OLED_CMD);      //设置显示位置―列低地址
  84   2          OLED_WR_Byte(0x10, OLED_CMD);      //设置显示位置―列高地址   
  85   2          for(n = 0; n < 128; n++) {
  86   3            OLED_WR_Byte(0, OLED_DATA);
  87   3          }
  88   2        } //更新显示
  89   1      }
  90          
  91          u8 Bit4ToHex(u8 bit4) {
  92   1        bit4 &= 0x0f;
  93   1        if (bit4 < 10) {
  94   2          bit4 = bit4 + '0';
  95   2        } else {
  96   2          bit4 = bit4 + 'A' - 10;
  97   2        }
  98   1        return bit4;
  99   1      }
 100          
 101          #if DISPLAY_MODE & DISPLAY_MODE_X16
 102          void OLED_ShowChar(u8 x, u8 y, u8 chr) {
 103   1        u8 c, i;
 104   1        c = chr - ' ';
 105   1        if (c < 0 || chr > '~') {
 106   2          c = '?' - ' ';
 107   2        }
 108   1      
 109   1        if (x > Max_Column - 1) {
 110   2          x = 0;
 111   2          y = y + 2;
 112   2        }
 113   1        OLED_Set_Pos(x, y);
 114   1        for (i = 0; i < 8; ++i) {
 115   2          OLED_WR_Byte(F8X16[c * 16 + i], OLED_DATA);
 116   2        }
C51 COMPILER V9.60.0.0   OLED12864                                                         07/24/2022 17:33:49 PAGE 3   

 117   1        OLED_Set_Pos(x, y + 1);
 118   1        for (i = 0; i < 8; ++i) {
 119   2          OLED_WR_Byte(F8X16[c * 16 + i + 8], OLED_DATA);
 120   2        }
 121   1      }
 122          
 123          //显示一个字符号串
 124          void OLED_ShowString(u8 x,u8 y, u8 * chr) {
 125   1        u8 j = 0;
 126   1        while (chr[j] != '\0') {
 127   2          OLED_ShowChar(x, y, chr[j]);
 128   2          x += 8;
 129   2          if(x > 120) {
 130   3            x = 0;
 131   3            y += 2;
 132   3          }
 133   2          j++;
 134   2        }
 135   1      }
 136          #endif
 137          
 138          #if DISPLAY_MODE & DISPLAY_MODE_X8
 139          void OLED_ShowChar8(u8 x, u8 y, u8 chr) {
 140   1        u8 c, i;
 141   1        c = chr - ' ';
 142   1        if (x > Max_Column - 1) {
 143   2          x = 0;
 144   2          y = y + 1;
 145   2        }
 146   1        OLED_Set_Pos(x, y);
 147   1        for(i = 0; i < 6; i++) {
 148   2          OLED_WR_Byte(F6x8[c][i], OLED_DATA);
 149   2        }
 150   1      }
 151          
 152          void OLED_ShowString8(u8 x,u8 y, u8 * chr) {
 153   1        u8 j = 0;
 154   1        while (chr[j] != '\0') {
 155   2          OLED_ShowChar8(x, y, chr[j]);
 156   2          x += 6;
 157   2          if(x > 120) {
 158   3            x = 0;
 159   3            y += 1;
 160   3          }
 161   2          j++;
 162   2        }
 163   1      }
 164          
 165          void OLED_ShowHexBuf8(u8 x, u8 y, u8 * buf, u8 len) {
 166   1        u8 i;
 167   1        for (i = 0; i < len; ++i) {
 168   2          x += 1;
 169   2          OLED_ShowChar8(x, y, Bit4ToHex(buf[i] >> 4));
 170   2          x += 6;
 171   2          OLED_ShowChar8(x, y, Bit4ToHex(buf[i]));
 172   2          x += 9;
 173   2        }
 174   1      }
 175          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.60.0.0   OLED12864                                                         07/24/2022 17:33:49 PAGE 4   

   CODE SIZE        =    809    ----
   CONSTANT SIZE    =   2072    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      19
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
