C51 COMPILER V9.60.0.0   DRV_UART                                                          05/13/2022 21:57:20 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DRV_UART
OBJECT MODULE PLACED IN ..\output\drv_uart.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE Source_File\drv_mcu\src\drv_uart.c COMPACT OPTIMIZE(8,SPEED) BROWSE INCD
                    -IR(.\Source_File\app\inc;.\Source_File\drv_mcu\inc;.\Source_File\drv_periph\inc) DEBUG OBJECTEXTEND PRINT(..\output\drv_
                    -uart.lst) TABS(2) OBJECT(..\output\drv_uart.obj)

line level    source

   1          #include "drv_uart.h"
   2          
   3          
   4          
   5          /**
   6            * @brief :串口初始化
   7            * @param :无
   8            * @note  :无
   9            * @retval:无
  10            */
  11          void drv_uart_init( )
  12          {
  13   1        //引脚配置 部分51单片机不需要
  14   1        //TX配置为输出 RX配置为输入
  15   1        UART_TX_PxM0 |= IO_OUT_PUT_PP_M0 << UART_TX_PIN_BIT;
  16   1        UART_TX_PxM1 |= IO_OUT_PUT_PP_M1 << UART_TX_PIN_BIT;
  17   1        UART_RX_PxM0 |= IO_IN_PUT_ONLY_M0 << UART_RX_PIN_BIT;
  18   1        UART_RX_PxM1 |= IO_IN_PUT_ONLY_M1 << UART_RX_PIN_BIT;
  19   1        UART_TX = 1;
  20   1        
  21   1        //串口配置
  22   1        SCON &= (uint8_t)((uint8_t)( ~( UART_MODE | UART_RX )));  //清SM0 SM1 REN
  23   1        SCON |= (uint8_t)( UART_8BAUDRATE_VOLATILE | UART_RX );
  24   1        
  25   1        //TIM1配置
  26   1        TMOD &= (uint8_t)((uint8_t)( ~TIM1_MODE ));
  27   1        TMOD |= TIM1_MODE_2;  //8位自动重装
  28   1        PCON = 0x00;
  29   1        TH1 = 0xFD;       //波特率默认配置为9600
  30   1        TL1 = 0xFD;
  31   1        
  32   1        TI = 1;         //清发送标志           
  33   1        TR1 = 1;        //使能定时器
  34   1      }
  35          
  36          /**
  37            * @brief :串口发送数据
  38            * @param :
  39            *     @TxBuffer:发送数据首地址
  40            *     @Length:数据长度
  41            * @note  :无
  42            * @retval:无
  43            */
  44          void drv_uart_tx_bytes( uint8_t* TxBuffer, uint8_t Length )
  45          {
  46   1        while( Length-- )
  47   1        {
  48   2          while( 0 == TI );   //等待上次发送完成
  49   2          TI = 0;         //清标志位
  50   2          SBUF = *TxBuffer;   //发送数据
  51   2          TxBuffer++;
  52   2        }
  53   1      }
C51 COMPILER V9.60.0.0   DRV_UART                                                          05/13/2022 21:57:20 PAGE 2   

  54          
  55          /**
  56            * @brief :串口接收数据
  57            * @param :
  58            *     @RxBuffer:发送数据首地址
  59            * @note  :无
  60            * @retval:接收到的字节个数
  61            */
  62          uint8_t drv_uart_rx_bytes( uint8_t* RxBuffer )
  63          {
  64   1        uint8_t l_RxLength = 0;
  65   1        uint16_t l_UartRxTimOut = 0x7FFF;
  66   1        
  67   1        while( l_UartRxTimOut-- )   //在超时范围内检测数据
  68   1        {
  69   2          if( 0 != RI )       //检测是否接收到数据
  70   2          {
  71   3            RI = 0;         //清标志位    
  72   3            *RxBuffer = SBUF;   //读数据
  73   3            RxBuffer++;
  74   3            l_RxLength++;
  75   3            l_UartRxTimOut = 0x7FFF;//重置超时检测
  76   3          }
  77   2        }
  78   1        
  79   1        return l_RxLength;      //等待超时，数据接收完成
  80   1      }
  81          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    111    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----       1
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
