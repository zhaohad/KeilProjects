C51 COMPILER V9.59.0.0   MAIN                                                              09/18/2020 18:53:16 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\list\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\list\main.lst
                    -) TABS(2) OBJECT(.\list\main.obj)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
  11          /*---------------------------------------------------------------------*/
  12          
  13          #include  "config.h"
  14          #include  "gpio.h"
  15          #include  "UART.h"
  16          #include  "delay.h"
  17          
  18          /*************  功能说明  **************
  19          
  20          本例程基于STC8H8K64U为主控芯片的实验箱8进行编写测试，STC8G、STC8H系列芯片可通用参考.
  21          
  22          例程为双串口全双工中断方式收发通讯程序。
  23          
  24          通过PC向MCU发送数据, MCU收到后通过串口把收到的数据原样返回.
  25          
  26          串口1默认波特率：115200,N,8,1.
  27          
  28          串口2默认波特率：57600,N,8,1.
  29          
  30          通过开启 UART.h 头文件里面的 UART1~UART4 定义，启动不同通道的串口通信。
  31          
  32          下载时, 选择时钟 22.1184MHz (可以在配置文件"config.h"中修改).
  33          
  34          ******************************************/
  35          
  36          /*************  本地常量声明  **************/
  37          
  38          
  39          /*************  本地变量声明  **************/
  40          
  41          
  42          /*************  本地函数声明  **************/
  43          
  44          
  45          /*************  外部函数和变量声明 *****************/
  46          
  47          
  48          /******************* IO配置函数 *******************/
  49          void  GPIO_config(void)
  50          {
  51   1        GPIO_InitTypeDef  GPIO_InitStructure;   //结构定义
  52   1        GPIO_InitStructure.Pin  = GPIO_Pin_0 | GPIO_Pin_1;    //指定要初始化的IO, GPIO_Pin_0 ~ GPIO_Pin_7
  53   1        GPIO_InitStructure.Mode = GPIO_PullUp;  //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_O
             -UT_PP
C51 COMPILER V9.59.0.0   MAIN                                                              09/18/2020 18:53:16 PAGE 2   

  54   1        GPIO_Inilize(GPIO_P3,&GPIO_InitStructure);  //初始化
  55   1      
  56   1        GPIO_InitStructure.Pin  = GPIO_Pin_6 | GPIO_Pin_7;    //指定要初始化的IO, GPIO_Pin_0 ~ GPIO_Pin_7
  57   1        GPIO_InitStructure.Mode = GPIO_PullUp;  //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_O
             -UT_PP
  58   1        GPIO_Inilize(GPIO_P4,&GPIO_InitStructure);  //初始化
  59   1      }
  60          
  61          /***************  串口初始化函数 *****************/
  62          void  UART_config(void)
  63          {
  64   1        COMx_InitDefine   COMx_InitStructure;         //结构定义
  65   1        COMx_InitStructure.UART_Mode      = UART_8bit_BRTx;   //模式,       UART_ShiftRight,UART_8bit_BRTx,UART_9b
             -it,UART_9bit_BRTx
  66   1        COMx_InitStructure.UART_BRT_Use   = BRT_Timer1;     //使用波特率,   BRT_Timer1, BRT_Timer2 (注意: 串口2固定
             -使用BRT_Timer2)
  67   1        COMx_InitStructure.UART_BaudRate  = 115200ul;     //波特率, 一般 110 ~ 115200
  68   1        COMx_InitStructure.UART_RxEnable  = ENABLE;       //接收允许,   ENABLE或DISABLE
  69   1        COMx_InitStructure.BaudRateDouble = DISABLE;      //波特率加倍, ENABLE或DISABLE
  70   1        COMx_InitStructure.UART_Interrupt = ENABLE;       //中断允许,   ENABLE或DISABLE
  71   1        COMx_InitStructure.UART_Polity    = Polity_0;     //指定中断优先级(低到高) Polity_0,Polity_1,Polity_2,Polit
             -y_3
  72   1        COMx_InitStructure.UART_P_SW      = UART1_SW_P30_P31; //切换端口,   UART1_SW_P30_P31,UART1_SW_P36_P37,UAR
             -T1_SW_P16_P17,UART1_SW_P43_P44
  73   1        UART_Configuration(UART1, &COMx_InitStructure);   //初始化串口1 UART1,UART2,UART3,UART4
  74   1      
  75   1        COMx_InitStructure.UART_Mode      = UART_8bit_BRTx;   //模式,       UART_ShiftRight,UART_8bit_BRTx,UART_9b
             -it,UART_9bit_BRTx
  76   1        COMx_InitStructure.UART_BaudRate  = 57600ul;      //波特率,     110 ~ 115200
  77   1        COMx_InitStructure.UART_RxEnable  = ENABLE;       //接收允许,   ENABLE或DISABLE
  78   1        COMx_InitStructure.UART_Interrupt = ENABLE;       //中断允许,   ENABLE或DISABLE
  79   1        COMx_InitStructure.UART_Polity    = Polity_0;     //指定中断优先级(低到高) Polity_0,Polity_1,Polity_2,Polit
             -y_3
  80   1        COMx_InitStructure.UART_P_SW      = UART2_SW_P46_P47; //切换端口,   UART2_SW_P10_P11,UART2_SW_P46_P47
  81   1        UART_Configuration(UART2, &COMx_InitStructure);   //初始化串口2 UART1,UART2,UART3,UART4
  82   1      
  83   1        PrintString1("STC8 UART1 Test Programme!\r\n"); //UART1发送一个字符串
  84   1        PrintString2("STC8 UART2 Test Programme!\r\n"); //UART2发送一个字符串
  85   1      }
  86          
  87          /***********************************************/
  88          void main(void)
  89          {
  90   1        u8  i;
  91   1      
  92   1        GPIO_config();
  93   1        UART_config();
  94   1        EA = 1;
  95   1      
  96   1        while (1)
  97   1        {
  98   2          delay_ms(1);
  99   2          if(COM1.RX_TimeOut > 0)   //超时计数
 100   2          {
 101   3            if(--COM1.RX_TimeOut == 0)
 102   3            {
 103   4              if(COM1.RX_Cnt > 0)
 104   4              {
 105   5                for(i=0; i<COM1.RX_Cnt; i++)  TX1_write2buff(RX1_Buffer[i]);  //收到的数据原样返回
 106   5              }
 107   4              COM1.RX_Cnt = 0;
 108   4            }
C51 COMPILER V9.59.0.0   MAIN                                                              09/18/2020 18:53:16 PAGE 3   

 109   3          }
 110   2          if(COM2.RX_TimeOut > 0)   //超时计数
 111   2          {
 112   3            if(--COM2.RX_TimeOut == 0)
 113   3            {
 114   4              if(COM2.RX_Cnt > 0)
 115   4              {
 116   5                for(i=0; i<COM2.RX_Cnt; i++)  TX2_write2buff(RX2_Buffer[i]);  //收到的数据原样返回
 117   5              }
 118   4              COM2.RX_Cnt = 0;
 119   4            }
 120   3          }
 121   2        }
 122   1      }
 123          
 124          
 125          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    263    ----
   CONSTANT SIZE    =     58    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
