C51 COMPILER V9.59.0.0   MAIN                                                              09/18/2020 18:56:13 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\list\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\list\main.lst
                    -) TABS(2) OBJECT(.\list\main.obj)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
  11          /*---------------------------------------------------------------------*/
  12          
  13          #include  "config.h"
  14          #include  "GPIO.h"
  15          #include  "UART.h"
  16          #include  "Exti.h"
  17          #include  "delay.h"
  18          
  19          /*************  功能说明  **************
  20          
  21          本例程基于STC8H8K64U为主控芯片的实验箱8进行编写测试，STC8G、STC8H系列芯片可通用参考.
  22          
  23          演示INT0~INT4 5个唤醒源将MCU从休眠唤醒.
  24          
  25          从串口输出唤醒源跟唤醒次数，115200,N,8,1.
  26          
  27          下载时, 选择时钟 22.1184MHz (用户可在"config.h"修改频率).
  28          
  29          ******************************************/
  30          
  31          /*************  本地常量声明  **************/
  32          
  33          
  34          /*************  本地变量声明  **************/
  35          u8 WakeUpSource;
  36          u8 WakeUpCnt;
  37          
  38          /*************  本地函数声明  **************/
  39          
  40          
  41          
  42          /*************  外部函数和变量声明 *****************/
  43          
  44          
  45          
  46          /******************** IO口配置 ********************/
  47          void  GPIO_config(void)
  48          {
  49   1        GPIO_InitTypeDef  GPIO_InitStructure;       //结构定义
  50   1      
  51   1        GPIO_InitStructure.Pin  = GPIO_Pin_All;     //指定要初始化的IO, GPIO_Pin_0 ~ GPIO_Pin_7, 或操作
  52   1        GPIO_InitStructure.Mode = GPIO_PullUp;      //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO
             -_OUT_PP
  53   1        GPIO_Inilize(GPIO_P3,&GPIO_InitStructure);  //初始化
C51 COMPILER V9.59.0.0   MAIN                                                              09/18/2020 18:56:13 PAGE 2   

  54   1      }
  55          
  56          /******************** INT配置 ********************/
  57          void  Exti_config(void)
  58          {
  59   1        EXTI_InitTypeDef  Exti_InitStructure;             //结构定义
  60   1      
  61   1        Exti_InitStructure.EXTI_Interrupt = ENABLE;       //中断使能,   ENABLE或DISABLE
  62   1        Exti_InitStructure.EXTI_Mode      = EXT_MODE_Fall;//中断模式,   EXT_MODE_RiseFall,EXT_MODE_Fall
  63   1        Exti_InitStructure.EXTI_Polity    = Polity_0;     //指定中断优先级(低到高) Polity_0,Polity_1,Polity_2,Polit
             -y_3
  64   1        Ext_Inilize(EXT_INT0,&Exti_InitStructure);        //初始化
  65   1      
  66   1        Exti_InitStructure.EXTI_Interrupt = ENABLE;       //中断使能,   ENABLE或DISABLE
  67   1        Exti_InitStructure.EXTI_Mode      = EXT_MODE_Fall;//中断模式,   EXT_MODE_RiseFall,EXT_MODE_Fall
  68   1        Exti_InitStructure.EXTI_Polity    = Polity_0;     //指定中断优先级(低到高) Polity_0,Polity_1,Polity_2,Polit
             -y_3
  69   1        Ext_Inilize(EXT_INT1,&Exti_InitStructure);        //初始化
  70   1      
  71   1        Exti_InitStructure.EXTI_Interrupt = ENABLE;       //中断使能,   ENABLE或DISABLE
  72   1        Ext_Inilize(EXT_INT2,&Exti_InitStructure);        //初始化
  73   1      
  74   1        Exti_InitStructure.EXTI_Interrupt = ENABLE;       //中断使能,   ENABLE或DISABLE
  75   1        Ext_Inilize(EXT_INT3,&Exti_InitStructure);        //初始化
  76   1      
  77   1        Exti_InitStructure.EXTI_Interrupt = ENABLE;       //中断使能,   ENABLE或DISABLE
  78   1        Ext_Inilize(EXT_INT4,&Exti_InitStructure);        //初始化
  79   1      }
  80          
  81          /****************  串口初始化函数 *****************/
  82          void  UART_config(void)
  83          {
  84   1        COMx_InitDefine   COMx_InitStructure;         //结构定义
  85   1        COMx_InitStructure.UART_Mode      = UART_8bit_BRTx; //模式, UART_ShiftRight,UART_8bit_BRTx,UART_9bit,UART
             -_9bit_BRTx
  86   1        COMx_InitStructure.UART_BRT_Use   = BRT_Timer2;     //使用波特率, BRT_Timer1, BRT_Timer2 (注意: 串口2固定使
             -用BRT_Timer2)
  87   1        COMx_InitStructure.UART_BaudRate  = 115200ul;     //波特率, 一般 110 ~ 115200
  88   1        COMx_InitStructure.UART_RxEnable  = ENABLE;       //接收允许,   ENABLE或DISABLE
  89   1        COMx_InitStructure.BaudRateDouble = DISABLE;      //波特率加倍, ENABLE或DISABLE
  90   1        COMx_InitStructure.UART_Interrupt = ENABLE;       //中断允许,   ENABLE或DISABLE
  91   1        COMx_InitStructure.UART_Polity    = Polity_0;     //指定中断优先级(低到高) Polity_0,Polity_1,Polity_2,Polit
             -y_3
  92   1        COMx_InitStructure.UART_P_SW      = UART1_SW_P30_P31; //切换端口,   UART1_SW_P30_P31,UART1_SW_P36_P37,UAR
             -T1_SW_P16_P17,UART1_SW_P43_P44
  93   1        UART_Configuration(UART1, &COMx_InitStructure);   //初始化串口1 UART1,UART2,UART3,UART4
  94   1      
  95   1        PrintString1("STC8H8K64U EXINT Wakeup Test Programme!\r\n");  //UART1发送一个字符串
  96   1      }
  97          
  98          /******************** 主函数***********************/
  99          void main(void)
 100          {
 101   1        GPIO_config();
 102   1        UART_config();
 103   1      //  Exti_config();
 104   1        EA  = 1;    //Enable all interrupt
 105   1        
 106   1        while(1)
 107   1        {
 108   2          while(!INT0); //等待外中断为高电平
 109   2          while(!INT1); //等待外中断为高电平
C51 COMPILER V9.59.0.0   MAIN                                                              09/18/2020 18:56:13 PAGE 3   

 110   2          while(!INT2); //等待外中断为高电平
 111   2          while(!INT3); //等待外中断为高电平
 112   2          while(!INT4); //等待外中断为高电平
 113   2          delay_ms(10); //delay 10ms
 114   2      
 115   2          while(!INT0); //等待外中断为高电平
 116   2          while(!INT1); //等待外中断为高电平
 117   2          while(!INT2); //等待外中断为高电平
 118   2          while(!INT3); //等待外中断为高电平
 119   2          while(!INT4); //等待外中断为高电平
 120   2          delay_ms(10); //delay 10ms
 121   2      
 122   2          Exti_config();
 123   2          WakeUpSource = 0;
 124   2      
 125   2          MCU_POWER_DOWN(); //Sleep
 126   2          _nop_();
 127   2          _nop_();
 128   2          _nop_();
 129   2          delay_ms(1);  //delay 1ms
 130   2          
 131   2          if(WakeUpSource == 1) PrintString1("外中断INT0唤醒  ");
 132   2          if(WakeUpSource == 2) PrintString1("外中断INT1唤醒  ");
 133   2          if(WakeUpSource == 3) PrintString1("外中断INT2唤醒  ");
 134   2          if(WakeUpSource == 4) PrintString1("外中断INT3唤醒  ");
 135   2          if(WakeUpSource == 5) PrintString1("外中断INT4唤醒  ");
 136   2          WakeUpSource = 0;
 137   2          
 138   2          WakeUpCnt++;
 139   2          TX1_write2buff(WakeUpCnt/100+'0');
 140   2          TX1_write2buff(WakeUpCnt%100/10+'0');
 141   2          TX1_write2buff(WakeUpCnt%10+'0');
 142   2          PrintString1("次唤醒\r\n");
 143   2        }
 144   1      
 145   1      }
 146          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    346    ----
   CONSTANT SIZE    =    136    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
