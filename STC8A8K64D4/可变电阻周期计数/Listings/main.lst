C51 COMPILER V9.60.0.0   MAIN                                                              01/08/2023 12:11:54 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE src\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "stc8a8k64d4.H"
   2          #include "stc8a_gpio.H"
   3          #include "stc8a_spi.h"
   4          #include "stc8a_nvic.h"
   5          #include "typedef.h"
   6          #include "oled12864.h"
   7          #include "stc8a_adc.h"
   8          #include "stc8a_switch.h"
   9          #include "dtos.h"
  10          #include "rotationCounter.h"
  11          
  12          bit forward = 1;
  13          
  14          void ADC_config();
  15          void ADC_GPIO_Config();
  16          void SPI_Config();
  17          void OLED_Config();
  18          void OLED_GPIO_Config();
  19          void MOTOR_GPIO_Config();
  20          
  21          void GPIO_T() {
  22   1        GPIO_InitTypeDef conf;
  23   1        conf.Mode = GPIO_OUT_PP;
  24   1        conf.Pin = GPIO_Pin_6;
  25   1        GPIO_Inilize(GPIO_P3, &conf);
  26   1      }
  27          
  28          void main() {
  29   1        GPIO_T();
  30   1        P36 = 0;
  31   1        MOTOR_GPIO_Config();
  32   1        OLED_Config();
  33   1        ADC_config();
  34   1        if (forward) {
  35   2          P_MOTOR_A = 0;
  36   2          P_MOTOR_B = 1;
  37   2        } else {
  38   2          P_MOTOR_A = 1;
  39   2          P_MOTOR_B = 0;
  40   2        }
  41   1      
  42   1        delay_ms(255);
  43   1        P36 = 1;
  44   1        while(1) {
  45   2          u16 adc = Get_ADCResult(ADC_CHANEL);
  46   2          float r;
  47   2          int cnt;
  48   2          u8 str[20];
  49   2          r = adc / 4096.f * 100.f;
  50   2          intToS(adc, str, 20);
  51   2          OLED_ShowString(0, 0, str);
  52   2          floatToSS(r, str, 20, 3);
  53   2          OLED_ShowString(0, 2, str);
  54   2          countRotation((unsigned char) r);
C51 COMPILER V9.60.0.0   MAIN                                                              01/08/2023 12:11:54 PAGE 2   

  55   2          cnt = getRotationCount();
  56   2          intToS(cnt, str, 20);
  57   2          OLED_ShowString(0, 4, str);
  58   2        }
  59   1      }
  60          
  61          void OLED_GPIO_Config() {
  62   1        GPIO_InitTypeDef conf;
  63   1        conf.Mode = GPIO_OUT_PP;
  64   1        conf.Pin = GPIO_Pin_All;
  65   1        GPIO_Inilize(GPIO_P4, &conf);
  66   1      }
  67          
  68          void OLED_Config() {
  69   1        OLED_GPIO_Config();
  70   1        OLED_Init();
  71   1      }
  72          
  73          void SPI_Config() {
  74   1        SPI_InitTypeDef conf;
  75   1        conf.SPI_Enable = ENABLE; //SPI启动 ENABLE, DISABLE
  76   1        conf.SPI_SSIG = ENABLE; //片选位 ENABLE, DISABLE
  77   1        conf.SPI_FirstBit = SPI_MSB; //移位方向 SPI_MSB, SPI_LSB
  78   1        conf.SPI_Mode = SPI_Mode_Master; //主从选择 SPI_Mode_Master, SPI_Mode_Slave
  79   1        conf.SPI_CPOL = SPI_CPOL_Low; //时钟相位   SPI_CPOL_High,   SPI_CPOL_Low
  80   1        conf.SPI_CPHA = SPI_CPHA_2Edge; //数据边沿   SPI_CPHA_1Edge, SPI_CPHA_2Edge
  81   1        conf.SPI_Speed = SPI_Speed_64; //SPI速度    SPI_Speed_4, SPI_Speed_16, SPI_Speed_64, SPI_Speed_2
  82   1        SPI_Init(&conf);
  83   1        
  84   1        P_SW1 = 0x00; // 使用 SS:P12 MOSI:P13 MISO:P14 SCLK:P15
  85   1        NVIC_SPI_Init(ENABLE, Priority_0); //中断使能, ENABLE/DISABLE; 优先级(低到高) Priority_0,Priority_1,Prior
             -ity_2,Priority_3
  86   1      }
  87          
  88          void ADC_GPIO_Config() {
  89   1        GPIO_InitTypeDef conf;
  90   1        conf.Mode = GPIO_PullUp;
  91   1        conf.Pin = GPIO_Pin_0;
  92   1        GPIO_Inilize(GPIO_P0, &conf);
  93   1      }
  94          
  95          void ADC_config(void) {
  96   1        ADC_InitTypeDef ADC_InitStructure;    //结构定义
  97   1        ADC_GPIO_Config();
  98   1        ADC_InitStructure.ADC_SMPduty = 31;   //ADC 模拟信号采样时间控制, 0~31（注意： SMPDUTY 一定不能设置小于 10
             -）
  99   1        ADC_InitStructure.ADC_CsSetup = 0;    //ADC 通道选择时间控制 0(默认),1
 100   1        ADC_InitStructure.ADC_CsHold = 1;   //ADC 通道选择保持时间控制 0,1(默认),2,3
 101   1        ADC_InitStructure.ADC_Speed = ADC_SPEED_2X1T;   //设置 ADC 工作时钟频率 ADC_SPEED_2X1T~ADC_SPEED_2X16T
 102   1        ADC_InitStructure.ADC_AdjResult = ADC_RIGHT_JUSTIFIED;  //ADC结果调整,  ADC_LEFT_JUSTIFIED,ADC_RIGHT_JUSTIF
             -IED
 103   1        ADC_Inilize(&ADC_InitStructure);    //初始化
 104   1        ADC_PowerControl(ENABLE);           //ADC电源开关, ENABLE或DISABLE
 105   1        // NVIC_ADC_Init(DISABLE, Priority_0);    //中断使能, ENABLE/DISABLE; 优先级(低到高) Priority_0,Priority_1,
             -Priority_2,Priority_3
 106   1      }
 107          
 108          void MOTOR_GPIO_Config() {
 109   1        GPIO_InitTypeDef conf;
 110   1        conf.Mode = GPIO_OUT_PP;
 111   1        conf.Pin = GPIO_Pin_1 | GPIO_Pin_2;
 112   1        GPIO_Inilize(GPIO_P0, &conf);
C51 COMPILER V9.60.0.0   MAIN                                                              01/08/2023 12:11:54 PAGE 3   

 113   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    331    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      48
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
