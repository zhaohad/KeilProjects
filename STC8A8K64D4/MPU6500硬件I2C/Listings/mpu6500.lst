C51 COMPILER V9.60.0.0   MPU6500                                                           09/10/2022 16:24:55 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MPU6500
OBJECT MODULE PLACED IN .\Objects\mpu6500.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE mpu6500.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\m
                    -pu6500.lst) TABS(2) OBJECT(.\Objects\mpu6500.obj)

line level    source

   1          #include "mpu6500.h"
   2          #include <math.H>
   3          
   4          #define pi    3.14159265f                           
   5          //#define Kp    0.8f                        
   6          //#define Ki    0.001f
   7          //#define halfT 0.004f
   8          
   9          #define Kp    200.0f
  10          #define Ki    0.1f
  11          #define halfT 0.001f
  12          
  13          float idata q0 = 1, q1 = 0, q2 = 0, q3 = 0;   
  14          float idata exInt = 0, eyInt = 0, ezInt = 0;
  15          
  16          void MPU6500_Init() {
  17   1        u8 p[1] = {0x00};
  18   1        I2C_WriteNbyte_DAddr(MPU_ADDR, PWR_MGMT_1, p, 1);
  19   1        p[0] = 0x07;
  20   1        I2C_WriteNbyte_DAddr(MPU_ADDR, SMPLRT_DIV, p, 1);
  21   1        p[0] = 0x06;
  22   1        I2C_WriteNbyte_DAddr(MPU_ADDR, CONFIG, p, 1);
  23   1        p[0] = 0x18;
  24   1        I2C_WriteNbyte_DAddr(MPU_ADDR, GYRO_CONFIG, p, 1);
  25   1        p[0] = 0x01;
  26   1        I2C_WriteNbyte_DAddr(MPU_ADDR, ACCEL_CONFIG, p, 1);
  27   1      }
  28          
  29          int MPU6500_GetData(uchar REG_Address) {
  30   1        uchar H, L;
  31   1        I2C_ReadNbyte_DAddr(MPU_ADDR, REG_Address, &H, 1);
  32   1        I2C_ReadNbyte_DAddr(MPU_ADDR, REG_Address, &L, 1);
  33   1        return ((H << 8) + L);
  34   1      }
  35          
  36          void MPU6500_IMU_Update(float gx, float gy, float gz, float ax, float ay, float az, float *angleX, float *
             -angleY) {
  37   1        float data norm;
  38   1        float idata vx, vy, vz;
  39   1        float idata ex, ey, ez;
  40   1      
  41   1        norm = sqrt(ax * ax + ay * ay + az * az); //把加速度计的三维向量转成单维向量   
  42   1        ax = ax / norm;
  43   1        ay = ay / norm;
  44   1        az = az / norm;
  45   1      
  46   1        // 下面是把四元数换算成《方向余弦矩阵》中的第三列的三个元素。 
  47   1        // 根据余弦矩阵和欧拉角的定义，地理坐标系的重力向量，转到机体坐标系，正好是这三个元素
  48   1        // 所以这里的vx vy vz，其实就是当前的欧拉角（即四元数）的机体坐标参照系上，换算出来的
  49   1        // 重力单位向量。
  50   1        vx = 2 * (q1 * q3 - q0 * q2);
  51   1        vy = 2 * (q0 * q1 + q2 * q3);
  52   1        vz = q0 * q0 - q1 * q1 - q2 * q2 + q3 * q3 ;
  53   1      
C51 COMPILER V9.60.0.0   MPU6500                                                           09/10/2022 16:24:55 PAGE 2   

  54   1        ex = (ay * vz - az * vy);
  55   1        ey = (az * vx - ax * vz);
  56   1        ez = (ax * vy - ay * vx);
  57   1      
  58   1        exInt = exInt + ex * Ki;
  59   1        eyInt = eyInt + ey * Ki;
  60   1        ezInt = ezInt + ez * Ki;
  61   1      
  62   1        gx = gx + Kp * ex + exInt;
  63   1        gy = gy + Kp * ey + eyInt;
  64   1        gz = gz + Kp * ez + ezInt;
  65   1      
  66   1        q0 = q0 + (-q1 * gx - q2 * gy - q3 * gz) * halfT;
  67   1        q1 = q1 + ( q0 * gx + q2 * gz - q3 * gy) * halfT;
  68   1        q2 = q2 + ( q0 * gy - q1 * gz + q3 * gx) * halfT;
  69   1        q3 = q3 + ( q0 * gz + q1 * gy - q2 * gx) * halfT;
  70   1      
  71   1        norm = sqrt(q0 * q0 + q1 * q1 + q2 * q2 + q3 * q3);
  72   1        q0 = q0 / norm;
  73   1        q1 = q1 / norm;
  74   1        q2 = q2 / norm;
  75   1        q3 = q3 / norm;
  76   1      
  77   1        *angleX = asin(2 * (q0 * q2 - q1 * q3 )) * 57.2957795f; // 俯仰 换算成度
  78   1        *angleY = asin(2 * (q0 * q1 + q2 * q3 )) * 57.2957795f; // 横滚
  79   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1922    ----
   CONSTANT SIZE    =      1    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      38
   IDATA SIZE       =     28      24
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
