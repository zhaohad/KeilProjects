C51 COMPILER V9.60.0.0   MAIN                                                              09/10/2022 16:24:54 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "stc8a8k64d4.h"
   2          #include "stc8a_gpio.h"
   3          #include "STC8A_I2C.h"
   4          #include "stc8a_switch.h"
   5          #include "stc8a_nvic.h"
   6          #include "typedef.h"
   7          #include "oled12864.h"
   8          #include "mpu6500.h"
   9          #include "stdio.h"
  10          #include "shanwai.h"
  11          #include "uart.h"
  12          
  13          float idata g_AX = 0, g_AY = 0, g_AZ = 0;
  14          float idata g_GX = 0, g_GY = 0, g_GZ = 0;
  15          
  16          void GPIO_Config() {
  17   1        GPIO_InitTypeDef conf;
  18   1        conf.Mode = GPIO_OUT_PP;
  19   1        conf.Pin = GPIO_Pin_All;
  20   1        GPIO_Inilize(GPIO_P0, &conf);
  21   1        
  22   1        P1_MODE_IO_PU(GPIO_Pin_4 | GPIO_Pin_5);
  23   1      }
  24          
  25          void I2C_Config() {
  26   1        I2C_InitTypeDef conf;
  27   1        conf.I2C_Mode = I2C_Mode_Master; //主从选择   I2C_Mode_Master, I2C_Mode_Slave
  28   1        conf.I2C_Enable = ENABLE; //I2C功能使能,   ENABLE, DISABLE
  29   1        conf.I2C_MS_WDTA = DISABLE; //主机使能自动发送,  ENABLE, DISABLE
  30   1        conf.I2C_Speed = 16; //总线速度=Fosc/2/(Speed*2+4),      0~63
  31   1        I2C_Init(&conf);
  32   1      
  33   1        I2C_SW(I2C_P14_P15);
  34   1      }
  35          
  36          void main() {
  37   1        GPIO_Config();
  38   1        OLED_Init();
  39   1        I2C_Config();
  40   1        MPU6500_Init();
  41   1        UART_Init_110592MHz_9600bps(NULL);
  42   1        while (1) {
  43   2          char idata str[16];
  44   2          float idata values[6];
  45   2          float angleX, angleY;
  46   2          g_AX = MPU6500_GetData(ACCEL_XOUT_H) / (float) 16384;
  47   2          sprintf(str, "AX = %f", g_AX);
  48   2          OLED_ShowString8(0, 0, str);
  49   2          g_AY = MPU6500_GetData(ACCEL_YOUT_H) / (float) 16384;
  50   2          sprintf(str, "AY = %f", g_AY);
  51   2          OLED_ShowString8(0, 1, str);
  52   2          g_AZ = MPU6500_GetData(ACCEL_ZOUT_H) / (float) 16384;
  53   2          sprintf(str, "AZ = %f", g_AZ);
  54   2          OLED_ShowString8(0, 2, str);
C51 COMPILER V9.60.0.0   MAIN                                                              09/10/2022 16:24:54 PAGE 2   

  55   2          g_GX = MPU6500_GetData(GYRO_XOUT_H) / (float) 131;
  56   2          sprintf(str, "GX = %f", g_GX);
  57   2          OLED_ShowString8(0, 3, str);
  58   2          g_GY = MPU6500_GetData(GYRO_YOUT_H) / (float) 131;
  59   2          sprintf(str, "GY = %f", g_GY);
  60   2          OLED_ShowString8(0, 4, str);
  61   2          g_GZ = MPU6500_GetData(GYRO_ZOUT_H) / (float) 131;
  62   2          sprintf(str, "GZ = %f", g_GZ);
  63   2          OLED_ShowString8(0, 5, str);
  64   2          values[0] = g_AX;
  65   2          values[1] = g_AY;
  66   2          values[2] = g_AZ;
  67   2          values[3] = g_GX;
  68   2          values[4] = g_GY;
  69   2          values[5] = g_GZ;
  70   2          SHANWAI_sendWaveValue(values, sizeof(values[0]), 6);
  71   2          MPU6500_IMU_Update(g_GX, g_GY, g_GZ, g_AX, g_AY, g_AZ, &angleX, &angleY);
  72   2          sprintf(str, "nX = %f", angleX);
  73   2          OLED_ShowString8(0, 6, str);
  74   2          sprintf(str, "nY = %f", angleY);
  75   2          OLED_ShowString8(0, 7, str);
  76   2        }
  77   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    754    ----
   CONSTANT SIZE    =     64    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      16
   IDATA SIZE       =     24      40
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
