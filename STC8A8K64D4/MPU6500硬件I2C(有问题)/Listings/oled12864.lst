C51 COMPILER V9.60.0.0   OLED12864                                                         08/01/2022 01:38:24 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE OLED12864
OBJECT MODULE PLACED IN .\Objects\oled12864.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE src\12864\oled12864.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\src) DEBUG OBJEC
                    -TEXTEND PRINT(.\Listings\oled12864.lst) TABS(2) OBJECT(.\Objects\oled12864.obj)

line level    source

   1          #include "oled12864.h"
*** ERROR C129 IN LINE 10 OF \hw\KeilProjects\STC8A8K64D4\MPU6500硬件I2C\src\stc/stc8a8k64d4.H: missing ';' before 'sfr'
   2          #include "oled12864wordlib.h"
   3          
   4          //初始化SSD1306     
   5          void OLED_Init() {
   6            OLED_RST_Set();
   7            delay_ms(100);
   8            OLED_RST_Clr();
   9            delay_ms(100);
  10            OLED_RST_Set(); 
  11          
  12            OLED_WR_Byte(0xAE, OLED_CMD); //--turn off oled panel
  13            OLED_WR_Byte(0x00, OLED_CMD); //---set low column address
  14            OLED_WR_Byte(0x10, OLED_CMD); //---set high column address
  15            OLED_WR_Byte(0x40, OLED_CMD); //--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
  16            OLED_WR_Byte(0x81, OLED_CMD); //--set contrast control register
  17            OLED_WR_Byte(0xCF, OLED_CMD); // Set SEG Output Current Brightness
  18            OLED_WR_Byte(0xA1, OLED_CMD); //--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
  19            OLED_WR_Byte(0xC8, OLED_CMD); //Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
  20            OLED_WR_Byte(0xA6, OLED_CMD); //--set normal display
  21            OLED_WR_Byte(0xA8, OLED_CMD); //--set multiplex ratio(1 to 64)
  22            OLED_WR_Byte(0x3f, OLED_CMD); //--1/64 duty
  23            OLED_WR_Byte(0xD3, OLED_CMD); //-set display offset Shift Mapping RAM Counter (0x00~0x3F)
  24            OLED_WR_Byte(0x00, OLED_CMD); //-not offset
  25            OLED_WR_Byte(0xd5, OLED_CMD); //--set display clock divide ratio/oscillator frequency
  26            OLED_WR_Byte(0x80, OLED_CMD); //--set divide ratio, Set Clock as 100 Frames/Sec
  27            OLED_WR_Byte(0xD9, OLED_CMD); //--set pre-charge period
  28            OLED_WR_Byte(0xF1, OLED_CMD); //Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
  29            OLED_WR_Byte(0xDA, OLED_CMD); //--set com pins hardware configuration
  30            OLED_WR_Byte(0x12, OLED_CMD);
  31            OLED_WR_Byte(0xDB, OLED_CMD); //--set vcomh
  32            OLED_WR_Byte(0x40, OLED_CMD); //Set VCOM Deselect Level
  33            OLED_WR_Byte(0x20, OLED_CMD); //-Set Page Addressing Mode (0x00/0x01/0x02)
  34            OLED_WR_Byte(0x02, OLED_CMD); //
  35            OLED_WR_Byte(0x8D, OLED_CMD); //--set Charge Pump enable/disable
  36            OLED_WR_Byte(0x14, OLED_CMD); //--set(0x10) disable
  37            OLED_WR_Byte(0xA4, OLED_CMD); // Disable Entire Display On (0xa4/0xa5)
  38            OLED_WR_Byte(0xA6, OLED_CMD); // Disable Inverse Display On (0xa6/a7) 
  39            OLED_WR_Byte(0xAF, OLED_CMD); //--turn on oled panel
  40            OLED_WR_Byte(0xAF, OLED_CMD); /*display ON*/ 
  41            OLED_Clear();
  42            OLED_Set_Pos(0, 0);   
  43          }
  44          
  45          //向SSD1306写入一个字节。
  46          //dat:要写入的数据/命令
  47          //cmd:数据/命令标志 0,表示命令;1,表示数据;
  48          void OLED_WR_Byte(u8 dat, u8 cmd) { 
  49            u8 i;
  50            if(cmd) {
  51              OLED_DC_Set();
  52            } else { 
  53              OLED_DC_Clr();
C51 COMPILER V9.60.0.0   OLED12864                                                         08/01/2022 01:38:24 PAGE 2   

  54            }   
  55            OLED_CS_Clr();
  56            for(i = 0; i < 8; i++) {
  57              OLED_SCLK_Clr();
  58              if(dat & 0x80) {
  59                OLED_SDIN_Set();
  60              }
  61              else {
  62                OLED_SDIN_Clr();
  63              }
  64              OLED_SCLK_Set();
  65              dat <<= 1;   
  66            }             
  67            OLED_CS_Set();
  68            OLED_DC_Set();      
  69          }
  70          
  71          void OLED_Set_Pos(u8 x, u8 y) { 
  72            OLED_WR_Byte(0xb0 + y, OLED_CMD);
  73            OLED_WR_Byte(((x & 0xf0) >> 4) | 0x10, OLED_CMD);
  74            OLED_WR_Byte((x & 0x0f) | 0x01, OLED_CMD); 
  75          }
  76          
  77          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
  78          void OLED_Clear() {
  79            u8 i, n;
  80            for(i = 0; i < 8; i++) {  
  81              OLED_WR_Byte(0xb0 + i, OLED_CMD);    //设置页地址（0~7）
  82              OLED_WR_Byte(0x00, OLED_CMD);      //设置显示位置―列低地址
  83              OLED_WR_Byte(0x10, OLED_CMD);      //设置显示位置―列高地址   
  84              for(n = 0; n < 128; n++) {
  85                OLED_WR_Byte(0, OLED_DATA);
  86              }
  87            } //更新显示
  88          }
  89          
  90          u8 Bit4ToHex(u8 bit4) {
  91            bit4 &= 0x0f;
  92            if (bit4 < 10) {
  93              bit4 = bit4 + '0';
  94            } else {
  95              bit4 = bit4 + 'A' - 10;
  96            }
  97            return bit4;
  98          }
  99          
 100          #if DISPLAY_MODE & DISPLAY_MODE_X16
 101          void OLED_ShowChar(u8 x, u8 y, u8 chr) {
 102            u8 c, i;
 103            c = chr - ' ';
 104            if (c < 0 || chr > '~') {
 105              c = '?' - ' ';
 106            }
 107          
 108            if (x > Max_Column - 1) {
 109              x = 0;
 110              y = y + 2;
 111            }
 112            OLED_Set_Pos(x, y);
 113            for (i = 0; i < 8; ++i) {
 114              OLED_WR_Byte(F8X16[c * 16 + i], OLED_DATA);
 115            }
C51 COMPILER V9.60.0.0   OLED12864                                                         08/01/2022 01:38:24 PAGE 3   

 116            OLED_Set_Pos(x, y + 1);
 117            for (i = 0; i < 8; ++i) {
 118              OLED_WR_Byte(F8X16[c * 16 + i + 8], OLED_DATA);
 119            }
 120          }
 121          
 122          //显示一个字符号串
 123          void OLED_ShowString(u8 x,u8 y, u8 * chr) {
 124            u8 j = 0;
 125            while (chr[j] != '\0') {
 126              OLED_ShowChar(x, y, chr[j]);
 127              x += 8;
 128              if(x > 120) {
 129                x = 0;
 130                y += 2;
 131              }
 132              j++;
 133            }
 134          }
 135          #endif
 136          
 137          #if DISPLAY_MODE & DISPLAY_MODE_X8
 138          void OLED_ShowChar8(u8 x, u8 y, u8 chr) {
 139            u8 c, i;
 140            c = chr - ' ';
 141            if (x > Max_Column - 1) {
 142              x = 0;
 143              y = y + 1;
 144            }
 145            OLED_Set_Pos(x, y);
 146            for(i = 0; i < 6; i++) {
 147              OLED_WR_Byte(F6x8[c][i], OLED_DATA);
 148            }
 149          }
 150          
 151          void OLED_ShowString8(u8 x,u8 y, u8 * chr) {
 152            u8 j = 0;
 153            while (chr[j] != '\0') {
 154              OLED_ShowChar8(x, y, chr[j]);
 155              x += 6;
 156              if(x > 120) {
 157                x = 0;
 158                y += 1;
 159              }
 160              j++;
 161            }
 162          }
 163          
 164          void OLED_ShowHexBuf8(u8 x, u8 y, u8 * buf, u8 len) {
 165            u8 i;
 166            for (i = 0; i < len; ++i) {
 167              x += 1;
 168              OLED_ShowChar8(x, y, Bit4ToHex(buf[i] >> 4));
 169              x += 6;
 170              OLED_ShowChar8(x, y, Bit4ToHex(buf[i]));
 171              x += 9;
 172            }
 173          }
 174          #endif

C51 COMPILATION COMPLETE.  0 WARNING(S),  1 ERROR(S)
