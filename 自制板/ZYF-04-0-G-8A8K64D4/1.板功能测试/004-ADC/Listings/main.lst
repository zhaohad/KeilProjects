C51 COMPILER V9.60.7.0   MAIN                                                              03/02/2024 17:03:04 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE src\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "stc8a8k64d4.H"
   2          #include "stc8a_gpio.H"
   3          #include "stc8a_spi.h"
   4          #include "stc8a_nvic.h"
   5          #include "typedef.h"
   6          #include "oled12864.h"
   7          #include "uart.h"
   8          #include "stc8a_adc.h"
   9          #include "stc8a_switch.h"
  10          #include "dtos.h"
  11          #include "G01_S.h"
  12          #include "stc8a_adc.h"
  13          
  14          void OLED_GPIO_Config() {
  15   1        GPIO_InitTypeDef conf;
  16   1        conf.Mode = GPIO_PullUp;
  17   1        conf.Pin = GPIO_Pin_0 | GPIO_Pin_1 | GPIO_Pin_2;
  18   1        GPIO_Inilize(GPIO_P0, &conf);
  19   1      
  20   1        conf.Mode = GPIO_PullUp;
  21   1        conf.Pin = GPIO_Pin_7 | GPIO_Pin_6;
  22   1        GPIO_Inilize(GPIO_P2, &conf);
  23   1      }
  24          
  25          void LED_GPIO_Config() {
  26   1        GPIO_InitTypeDef conf;
  27   1        conf.Mode = GPIO_PullUp;
  28   1        conf.Pin = GPIO_Pin_7;
  29   1        GPIO_Inilize(GPIO_P1, &conf);
  30   1      
  31   1        conf.Mode = GPIO_PullUp;
  32   1        conf.Pin = GPIO_Pin_5;
  33   1        GPIO_Inilize(GPIO_P5, &conf);
  34   1      
  35   1        conf.Mode = GPIO_PullUp;
  36   1        conf.Pin = GPIO_Pin_0;
  37   1        GPIO_Inilize(GPIO_P4, &conf);
  38   1      }
  39          
  40          void G01_S_GPIO_config() {
  41   1        xdata GPIO_InitTypeDef conf;
  42   1        conf.Mode = GPIO_PullUp;  
  43   1        conf.Pin = GPIO_Pin_0;
  44   1        GPIO_Inilize(GPIO_P2, &conf);
  45   1        
  46   1        conf.Pin = GPIO_Pin_1;
  47   1        GPIO_Inilize(GPIO_P4, &conf);
  48   1      
  49   1        conf.Pin = GPIO_Pin_4 | GPIO_Pin_5 | GPIO_Pin_6 | GPIO_Pin_7;
  50   1        GPIO_Inilize(GPIO_P3, &conf);
  51   1        
  52   1        NRF24L01_Gpio_Init();
  53   1      }
  54          
C51 COMPILER V9.60.7.0   MAIN                                                              03/02/2024 17:03:04 PAGE 2   

  55          void RZ7899_GPIO_Config() {
  56   1        GPIO_InitTypeDef conf;
  57   1        conf.Mode = GPIO_PullUp;
  58   1        conf.Pin = GPIO_Pin_4;
  59   1        GPIO_Inilize(GPIO_P2, &conf);
  60   1      }
  61          
  62          void GOPI_Config() {
  63   1        OLED_GPIO_Config();
  64   1        
  65   1        LED_GPIO_Config();
  66   1      
  67   1        G01_S_GPIO_config();
  68   1        
  69   1        RZ7899_GPIO_Config();
  70   1      }
  71          
  72          void ADC_Init() {
  73   1        ADC_InitTypeDef ADC_InitStructure;    //结构定义
  74   1        ADC_InitStructure.ADC_SMPduty = 31;   //ADC 模拟信号采样时间控制, 0~31（注意： SMPDUTY 一定不能设置小于 10
             -）
  75   1        ADC_InitStructure.ADC_CsSetup = 0;    //ADC 通道选择时间控制 0(默认),1
  76   1        ADC_InitStructure.ADC_CsHold = 1;   //ADC 通道选择保持时间控制 0,1(默认),2,3
  77   1        ADC_InitStructure.ADC_Speed = ADC_SPEED_2X1T;   //设置 ADC 工作时钟频率 ADC_SPEED_2X1T~ADC_SPEED_2X16T
  78   1        ADC_InitStructure.ADC_AdjResult = ADC_RIGHT_JUSTIFIED;  //ADC结果调整,  ADC_LEFT_JUSTIFIED,ADC_RIGHT_JUSTIF
             -IED
  79   1        ADC_Inilize(&ADC_InitStructure);    //初始化
  80   1        ADC_PowerControl(ENABLE);           //ADC电源开关, ENABLE或DISABLE
  81   1        // NVIC_ADC_Init(DISABLE, Priority_0);    //中断使能, ENABLE/DISABLE; 优先级(低到高) Priority_0,Priority_1,
             -Priority_2,Priority_3
  82   1      }
  83          
  84          void main() {
  85   1        bit exist;
  86   1        GOPI_Config();
  87   1      
  88   1        OLED_Init();
  89   1      
  90   1        OLED_ShowString(0, 0, "CHECK MODULE...");
  91   1        exist = NRF24L01_check();
  92   1        
  93   1        ADC_Init();
  94   1        
  95   1        if (exist) {
  96   2          OLED_ShowString(0, 2, "DONE");
  97   2        } else {
  98   2          OLED_ShowString(0, 2, "NOT EXIST");
  99   2        }
 100   1        
 101   1        P_MOTOR = 0;
 102   1      
 103   1        while(1) {
 104   2          xdata u16 adc = 0;
 105   2          xdata float percentage;
 106   2          xdata u8 strP[10];
 107   2          xdata u8 strD[20];
 108   2          
 109   2          adc = Get_ADCResult(CHANEL_ADC0);
 110   2          percentage = adc / 4096.f * 100.f;
 111   2          floatToSS(percentage, strP, 10, 2);
 112   2          sprintf(strD, "CHANEL1: %s", strP);
 113   2          OLED_ShowString(0, 0, strD);
C51 COMPILER V9.60.7.0   MAIN                                                              03/02/2024 17:03:04 PAGE 3   

 114   2          
 115   2          adc = Get_ADCResult(CHANEL_ADC1);
 116   2          percentage = adc / 4096.f * 100.f;
 117   2          floatToSS(percentage, strP, 10, 2);
 118   2          sprintf(strD, "CHANEL1: %s", strP);
 119   2          OLED_ShowString(0, 2, strD);
 120   2          
 121   2          adc = Get_ADCResult(CHANEL_ADC2);
 122   2          percentage = adc / 4096.f * 100.f;
 123   2          floatToSS(percentage, strP, 10, 2);
 124   2          sprintf(strD, "CHANEL1: %s", strP);
 125   2          OLED_ShowString(0, 4, strD);
 126   2          
 127   2          adc = Get_ADCResult(CHANEL_ADC3);
 128   2          percentage = adc / 4096.f * 100.f;
 129   2          floatToSS(percentage, strP, 10, 2);
 130   2          sprintf(strD, "CHANEL1: %s", strP);
 131   2          OLED_ShowString(0, 6, strD);
 132   2        }
 133   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    707    ----
   CONSTANT SIZE    =     43    ----
   XDATA SIZE       =   ----      38
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
