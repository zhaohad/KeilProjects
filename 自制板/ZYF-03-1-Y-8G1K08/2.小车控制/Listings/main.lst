C51 COMPILER V9.60.7.0   MAIN                                                              12/17/2023 09:57:06 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE src\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "typedef.h"
   2          #include "dtos.h"
   3          #include "STC8xxxx.h"
   4          #include "GPIO.h"
   5          #include "UART.h"
   6          #include "CarCtrl.h"
   7          
   8          void RZ7899_GPIO_Config() {
   9   1        xdata GPIO_InitTypeDef conf;
  10   1        conf.Mode = GPIO_OUT_PP;
  11   1        conf.Pin = GPIO_Pin_4 | GPIO_Pin_5;
  12   1        GPIO_Inilize(GPIO_P1, &conf);
  13   1      }
  14          
  15          void DRV8833_GPIO_Config() {
  16   1        xdata GPIO_InitTypeDef conf;
  17   1        conf.Mode = GPIO_OUT_PP;
  18   1        conf.Pin = GPIO_Pin_0 | GPIO_Pin_1 | GPIO_Pin_2 | GPIO_Pin_3;
  19   1        GPIO_Inilize(GPIO_P1, &conf);
  20   1      }
  21          
  22          void UART_Config() {
  23   1        xdata COMx_InitDefine config; //结构定义
  24   1        config.UART_Mode = UART_8bit_BRTx; //模式, UART_ShiftRight,UART_8bit_BRTx,UART_9bit,UART_9bit_BRTx
  25   1        config.UART_BRT_Use = BRT_Timer1; //使用波特率, BRT_Timer1, BRT_Timer2 (注意: 串口2固定使用BRT_Timer2)
  26   1        config.UART_BaudRate = 9600ul;  //波特率, 一般 110 ~ 115200
  27   1        config.UART_RxEnable = ENABLE; //接收允许, ENABLE或DISABLE
  28   1        config.BaudRateDouble = DISABLE; //波特率加倍, ENABLE或DISABLE
  29   1        config.UART_Interrupt = ENABLE; //中断允许, ENABLE或DISABLE
  30   1        config.UART_Polity = Polity_0; //指定中断优先级(低到高) Polity_0,Polity_1,Polity_2,Polity_3
  31   1        // config.UART_P_SW = UART1_SW_P30_P31; //切换端口, UART1_SW_P30_P31,UART1_SW_P36_P37,UART1_SW_P16_P17,U
             -ART1_SW_P43_P44
  32   1        config.UART_P_SW = UART1_SW_P16_P17; //切换端口, UART1_SW_P30_P31,UART1_SW_P36_P37,UART1_SW_P16_P17,UART1
             -_SW_P43_P44
  33   1        UART_Configuration(UART1, &config); //初始化串口1 UART1,UART2,UART3,UART4
  34   1      }
  35          
  36          void UART_GPIO_Config() {
  37   1        xdata GPIO_InitTypeDef conf;
  38   1        conf.Mode = GPIO_OUT_PP;
  39   1        conf.Pin = GPIO_Pin_6 | GPIO_Pin_7;
  40   1        GPIO_Inilize(GPIO_P1, &conf);
  41   1      
  42   1        conf.Mode = GPIO_OUT_PP;
  43   1        conf.Pin = GPIO_Pin_0 | GPIO_Pin_1;
  44   1        GPIO_Inilize(GPIO_P3, &conf);
  45   1      }
  46          
  47          void main() { 
  48   1        RZ7899_GPIO_Config();
  49   1      
  50   1        DRV8833_GPIO_Config();
  51   1      
  52   1        UART_Config();
C51 COMPILER V9.60.7.0   MAIN                                                              12/17/2023 09:57:06 PAGE 2   

  53   1        
  54   1        CarControl_Init();
  55   1      
  56   1        EA = 1;
  57   1        
  58   1        TurnBack();
  59   1      
  60   1        while(1) {
  61   2          if (COM1.RX_TimeOut > 0) {
  62   3            if (--COM1.RX_TimeOut == 0) {
  63   4              u8 i;
  64   4              if (COM1.RX_Cnt > 0) {
  65   5                for (i = 0; i < COM1.RX_Cnt; ++i) {
  66   6                  TX1_write2buff(RX1_Buffer[i]);
  67   6                  if (RX1_Buffer[i] == '0') {
  68   7                    TurnBack();
  69   7                  } else if (RX1_Buffer[i] == '1') {
  70   7                    TurnLeft();
  71   7                  } else if (RX1_Buffer[i] == '2') {
  72   7                    TurnRight();
  73   7                  } else if (RX1_Buffer[i] == '3') {
  74   7                    Motor_Go(1);
  75   7                  } else if (RX1_Buffer[i] == '4') {
  76   7                    Motor_Go(0);
  77   7                  } else if (RX1_Buffer[i] == '5') {
  78   7                    Motor_Stop();
  79   7                  } else if (RX1_Buffer[i] == 'a') {
  80   7                    SetSpeed(4);
  81   7                  } else if (RX1_Buffer[i] == 'b') {
  82   7                    SetSpeed(5);
  83   7                  } else if (RX1_Buffer[i] == 'c') {
  84   7                    SetSpeed(6);
  85   7                  } else if (RX1_Buffer[i] == 'd') {
  86   7                    SetSpeed(7);
  87   7                  } else if (RX1_Buffer[i] == 'e') {
  88   7                    SetSpeed(8);
  89   7                  } else if (RX1_Buffer[i] == 'f') {
  90   7                    SetSpeed(9);
  91   7                  } else if (RX1_Buffer[i] == 'g') {
  92   7                    SetSpeed(10);
  93   7                  }
  94   6                }
  95   5                COM1.RX_Cnt = 0;
  96   5              }
  97   4            }
  98   3          }
  99   2        }
 100   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    463    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      18
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
