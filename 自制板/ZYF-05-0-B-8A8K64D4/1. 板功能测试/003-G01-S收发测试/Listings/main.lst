C51 COMPILER V9.60.7.0   MAIN                                                              03/16/2024 12:57:21 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE src\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "stc8a8k64d4.H"
   2          #include "stc8a_gpio.H"
   3          #include "stc8a_spi.h"
   4          #include "stc8a_nvic.h"
   5          #include "typedef.h"
   6          #include "oled12864.h"
   7          #include "uart.h"
   8          #include "stc8a_adc.h"
   9          #include "stc8a_switch.h"
  10          #include "dtos.h"
  11          #include "G01_S.h"
  12          
  13          void OLED_GPIO_Config() {
  14   1        xdata GPIO_InitTypeDef conf;
  15   1        conf.Mode = GPIO_OUT_PP;
  16   1        conf.Pin = GPIO_Pin_2;
  17   1        GPIO_Inilize(GPIO_P4, &conf);
  18   1      
  19   1        conf.Mode = GPIO_OUT_PP;
  20   1        conf.Pin = GPIO_Pin_1 | GPIO_Pin_2 | GPIO_Pin_3 | GPIO_Pin_4;
  21   1        GPIO_Inilize(GPIO_P2, &conf);
  22   1      }
  23          
  24          void G01_S_GPIO_config() {
  25   1        xdata GPIO_InitTypeDef conf;
  26   1        conf.Mode = GPIO_PullUp;  
  27   1        conf.Pin = GPIO_Pin_0 | GPIO_Pin_1 | GPIO_Pin_2 | GPIO_Pin_3 | GPIO_Pin_4;
  28   1        GPIO_Inilize(GPIO_P0, &conf);
  29   1        
  30   1        conf.Pin = GPIO_Pin_3;
  31   1        GPIO_Inilize(GPIO_P4, &conf);
  32   1        
  33   1        NRF24L01_Gpio_Init();
  34   1      }
  35          
  36          void GOPI_Config() {
  37   1        OLED_GPIO_Config();
  38   1      
  39   1        G01_S_GPIO_config();
  40   1      }
  41          
  42          bit g_Rec = 1;
  43          xdata u8 outL = 0;
  44          
  45          void main() {
  46   1        bit exist;
  47   1        GOPI_Config();
  48   1      
  49   1        OLED_Init();
  50   1      
  51   1        OLED_ShowString8(0, outL, "CHECK MODULE...");
  52   1        outL++;
  53   1        exist = NRF24L01_check();
  54   1        
C51 COMPILER V9.60.7.0   MAIN                                                              03/16/2024 12:57:21 PAGE 2   

  55   1        if (exist) {
  56   2          OLED_ShowString8(0, outL, "DONE");
  57   2        } else {
  58   2          OLED_ShowString8(0, outL, "NOT EXIST");
  59   2        }
  60   1        outL++;
  61   1        
  62   1        RF24L01_Init();
  63   1        _nop_();_nop_();_nop_();_nop_();_nop_();
  64   1      
  65   1        if (g_Rec) {
  66   2          OLED_ShowString8(0, outL, "Set MODE_RX");
  67   2          RF24L01_Set_Mode(MODE_RX); //接收模式
  68   2        } else {
  69   2          OLED_ShowString8(0, outL, "Set MODE_TX");
  70   2          RF24L01_Set_Mode(MODE_TX); //发送模式
  71   2        }
  72   1        _nop_();_nop_();_nop_();_nop_();_nop_();
  73   1        outL++;
  74   1      
  75   1        while(1) {
  76   2          xdata u8 outLL = outL;
  77   2          xdata uint8_t numStr[10];
  78   2          xdata uint8_t str[20];
  79   2      
  80   2          if (g_Rec) {
  81   3            xdata uint8_t rx;
  82   3            xdata uint8_t g_rece[8];
  83   3            xdata u8 i;
  84   3            sprintf(str, "Receiving...");
  85   3            OLED_ShowString8(0, outLL, str);
  86   3            outLL++;
  87   3            rx = NRF24L01_RxPacket(g_rece); //接收字节
  88   3      
  89   3            if (rx != 0) {
  90   4              uintToS(rx, numStr, 10);
  91   4              sprintf(str, "Received: %s   ", numStr);
  92   4              OLED_ShowString8(0, outLL, str);
  93   4              outLL++;
  94   4              
  95   4              sprintf(str, "d: ");
  96   4              for (i = 0; i < rx; ++i) {
  97   5                u8 d = g_rece[i];
  98   5                uintToS(d, numStr, 10);
  99   5                sprintf(str, "%s %s", str, numStr);
 100   5              }
 101   4              sprintf(str, "%s    ", str);
 102   4              OLED_ShowString8(0, outLL, str);
 103   4              outLL++;
 104   4            }
 105   3          } else {
 106   3            xdata uint8_t tx[1];
 107   3            xdata int someNumber = 13;
 108   3            xdata uint8_t res;
 109   3            tx[0] = someNumber;
 110   3            intToS(tx[0], numStr, 10);
 111   3            sprintf(str, "Sending %s   ", numStr);
 112   3            OLED_ShowString8(0, outLL, str);
 113   3            outLL++;
 114   3            res = NRF24L01_TxPacket((uint8_t *) tx, 1);
 115   3            if (res == TX_OK) {
 116   4              sprintf(str, "SUCCEES");
C51 COMPILER V9.60.7.0   MAIN                                                              03/16/2024 12:57:21 PAGE 3   

 117   4            } else {
 118   4              sprintf(str, "Failed");
 119   4            }
 120   3            OLED_ShowString8(0, outLL, str);
 121   3            outLL++;
 122   3      
 123   3            someNumber++;
 124   3            if (someNumber > 100) {
 125   4              someNumber = 0;
 126   4            }
 127   3            
 128   3            delay_ms(3000);
 129   3          }
 130   2        }
 131   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    697    ----
   CONSTANT SIZE    =    130    ----
   XDATA SIZE       =      1      49
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
