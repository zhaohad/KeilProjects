C51 COMPILER V9.60.7.0   MAIN                                                              03/24/2024 20:40:19 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE src\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "stc8a8k64d4.H"
   2          #include "stc8a_gpio.H"
   3          #include "stc8a_spi.h"
   4          #include "stc8a_nvic.h"
   5          #include "typedef.h"
   6          #include "oled12864.h"
   7          #include "stc8a_adc.h"
   8          #include "stc8a_switch.h"
   9          #include "dtos.h"
  10          #include "G01_S.h"
  11          #include  "STC8A_UART.h"
  12          #include "delay.h"
  13          
  14          bit g_Rec = 1;
  15          xdata u8 outL = 0;
  16          
  17          void OLED_GPIO_Config() {
  18   1        GPIO_InitTypeDef conf;
  19   1        conf.Mode = GPIO_OUT_PP;
  20   1        conf.Pin = GPIO_Pin_0 | GPIO_Pin_1 | GPIO_Pin_2 | GPIO_Pin_3 | GPIO_Pin_4;
  21   1        GPIO_Inilize(GPIO_P4, &conf);
  22   1      }
  23          
  24          void OLED12864_Init() {
  25   1        OLED_GPIO_Config();
  26   1        OLED_Init();
  27   1      }
  28          
  29          void MOTOR_GPIO_Config() {
  30   1        GPIO_InitTypeDef conf;
  31   1        conf.Mode = GPIO_PullUp;
  32   1        
  33   1        conf.Pin = GPIO_Pin_0 | GPIO_Pin_1 | GPIO_Pin_2 | GPIO_Pin_3;
  34   1        GPIO_Inilize(GPIO_P2, &conf);
  35   1      }
  36          
  37          void UART_GPIO_Config() {
  38   1        GPIO_InitTypeDef GPIO_InitStructure;
  39   1        GPIO_InitStructure.Pin = GPIO_Pin_0 | GPIO_Pin_1;
  40   1        GPIO_InitStructure.Mode = GPIO_PullUp;
  41   1        GPIO_Inilize(GPIO_P0, &GPIO_InitStructure);
  42   1      }
  43          
  44          void GPIO_Config() {
  45   1        GPIO_InitTypeDef conf;
  46   1        conf.Mode = GPIO_OUT_PP;
  47   1        conf.Pin = GPIO_Pin_2 | GPIO_Pin_3 | GPIO_Pin_4 | GPIO_Pin_5 | GPIO_Pin_6;
  48   1        GPIO_Inilize(GPIO_P0, &conf);
  49   1      }
  50          
  51          void  UART_config() {
  52   1        COMx_InitDefine COMx_InitStructure; //结构定义
  53   1        UART1_SW(UART3_SW_P00_P01);
  54   1        COMx_InitStructure.UART_Mode = UART_8bit_BRTx; //模式,   UART_ShiftRight,UART_8bit_BRTx,UART_9bit,UART_9b
C51 COMPILER V9.60.7.0   MAIN                                                              03/24/2024 20:40:19 PAGE 2   

             -it_BRTx
  55   1        COMx_InitStructure.UART_BRT_Use = BRT_Timer3; //使用波特率, BRT_Timer1, BRT_Timer2 (注意: 串口2固定使用BR
             -T_Timer2)
  56   1        COMx_InitStructure.UART_BaudRate = 9600ul; //波特率,     110 ~ 115200
  57   1        COMx_InitStructure.UART_RxEnable = ENABLE; //接收允许,   ENABLE或DISABLE
  58   1        UART_Configuration(UART3, &COMx_InitStructure); //初始化串口2 USART1,USART2,USART3,USART4
  59   1        NVIC_UART3_Init(ENABLE,Priority_1); //中断使能, ENABLE/DISABLE; 优先级(低到高) Priority_0,Priority_1,Prio
             -rity_2,Priority_3
  60   1        EA = 1;
  61   1      }
  62          
  63          xdata u8 cnt = 0;
  64          xdata u8 buf[20];
  65          void on_UART_Rec_1Byte(u8 d) {
  66   1        buf[cnt++] = d;
  67   1        buf[cnt] = cnt;
  68   1        if (cnt > 8) {
  69   2          OLED_ShowHexBuf8(0, 2, buf, 8);
  70   2          OLED_ShowHexBuf8(0, 3, buf + 8, cnt - 7);
  71   2        } else {
  72   2          OLED_ShowHexBuf8(0, 2, buf, cnt + 1);
  73   2        }
  74   1      }
  75          
  76          void main() {
  77   1        /*int someNumber = 0;
  78   1        bit exist;*/
  79   1        xdata u8 cmd_get_info[6] = {0x57, 0xAB, 0x00, 0x01, 0x00, 0x03};
  80   1        xdata u8 send_empty[14] = {0x57, 0xAB, 0x00, 0x02, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x0C};
  81   1        xdata u8 send_aaaaa[14] = {0x57, 0xAB, 0x00, 0x02, 0x08, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 
             -0x10};
  82   1        xdata u8 i = 0;
  83   1        GPIO_Config();
  84   1        UART_GPIO_Config();
  85   1        g_onURAT_1Byte_CB = on_UART_Rec_1Byte;
  86   1        UART_config();
  87   1        
  88   1        OLED12864_Init();
  89   1        OLED_ShowString8(0, 0, "Loading ...");
  90   1        for (i = 0; i < 3; ++i) {
  91   2          delay_ms(254);
  92   2        }
  93   1        OLED_ShowString8(0, 0, "Loaded     ");
  94   1        TX3_write2buffs(cmd_get_info, 6);
  95   1        OLED_ShowString8(0, 0, "Sent       ");
  96   1        P02 = 0;
  97   1        
  98   1        while(1) {
  99   2          /*P02 = P03;
 100   2          if (!P03) {
 101   2            TX3_write2buffs(send_aaaaa, 14);
 102   2          } else {
 103   2            TX3_write2buffs(send_empty, 14);
 104   2          }*/
 105   2        }
 106   1      
 107   1        /*NRF24L01_GPIO_config();
 108   1        NRF24L01_Gpio_Init();
 109   1      
 110   1        OLED_ShowString8(0, 0, "CHECK MODULE...");
 111   1        
C51 COMPILER V9.60.7.0   MAIN                                                              03/24/2024 20:40:19 PAGE 3   

 112   1        exist = NRF24L01_check();
 113   1        if (exist) {
 114   1          OLED_ShowString8(0, outL, "G01-S Online");
 115   1        } else {
 116   1          OLED_ShowString8(0, outL, "G01-S Offline");
 117   1          while (1);
 118   1        }
 119   1        outL++;
 120   1        
 121   1        RF24L01_Init();
 122   1        _nop_();_nop_();_nop_();_nop_();_nop_();
 123   1      
 124   1        if (g_Rec) {
 125   1          OLED_ShowString8(0, outL, "Set MODE_RX");
 126   1          RF24L01_Set_Mode(MODE_RX); //接收模式
 127   1          _nop_();_nop_();_nop_();_nop_();_nop_();
 128   1        } else {
 129   1          OLED_ShowString8(0, outL, "Set MODE_TX");
 130   1          RF24L01_Set_Mode(MODE_TX); //发送模式
 131   1          _nop_();_nop_();_nop_();_nop_();_nop_();
 132   1        }
 133   1        outL++;
 134   1      
 135   1        while(1) {
 136   1          u8 outLL = outL;
 137   1          xdata uint8_t res;
 138   1          xdata uint8_t tx[1];
 139   1          xdata uint8_t numStr[10];
 140   1          xdata uint8_t str[20];
 141   1      
 142   1          if (g_Rec) {
 143   1            xdata uint8_t rx;
 144   1            xdata uint8_t g_rece[8];
 145   1            u8 i;
 146   1            sprintf(str, "Receiving...");
 147   1            OLED_ShowString8(0, outLL, str);
 148   1            outLL++;
 149   1            rx = NRF24L01_RxPacket(g_rece); //接收字节
 150   1      
 151   1            if (rx != 0) {
 152   1              uintToS(rx, numStr, 10);
 153   1              sprintf(str, "Received: %s   ", numStr);
 154   1              OLED_ShowString8(0, outLL, str);
 155   1              outLL++;
 156   1              
 157   1              sprintf(str, "d: ");
 158   1              for (i = 0; i < rx; ++i) {
 159   1                u8 d = g_rece[i];
 160   1                uintToS(d, numStr, 10);
 161   1                sprintf(str, "%s %s", str, numStr);
 162   1              }
 163   1              sprintf(str, "%s    ", str);
 164   1              OLED_ShowString8(0, outLL, str);
 165   1              outLL++;
 166   1            }
 167   1          } else {
 168   1            tx[0] = someNumber;
 169   1            intToS(tx[0], numStr, 10);
 170   1            sprintf(str, "Sending %s   ", numStr);
 171   1            OLED_ShowString8(0, outLL, str);
 172   1            outLL++;
 173   1            res = NRF24L01_TxPacket((uint8_t *) tx, 1);
C51 COMPILER V9.60.7.0   MAIN                                                              03/24/2024 20:40:19 PAGE 4   

 174   1            if (res == TX_OK) {
 175   1              sprintf(str, "SUCCEES");
 176   1            } else {
 177   1              sprintf(str, "Failed");
 178   1            }
 179   1            OLED_ShowString8(0, outLL, str);
 180   1            outLL++;
 181   1      
 182   1            someNumber++;
 183   1            if (someNumber > 100) {
 184   1              someNumber = 0;
 185   1            }
 186   1            
 187   1            delay_ms(3000);
 188   1          }
 189   1        }*/
 190   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    360    ----
   CONSTANT SIZE    =     70    ----
   XDATA SIZE       =     22      35
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
