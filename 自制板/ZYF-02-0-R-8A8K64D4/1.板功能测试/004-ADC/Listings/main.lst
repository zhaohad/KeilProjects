C51 COMPILER V9.60.7.0   MAIN                                                              06/12/2023 16:27:01 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE src\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "stc8a8k64d4.H"
   2          #include "stc8a_gpio.H"
   3          #include "stc8a_spi.h"
   4          #include "stc8a_nvic.h"
   5          #include "typedef.h"
   6          #include "oled12864.h"
   7          #include "uart.h"
   8          #include "stc8a_adc.h"
   9          #include "stc8a_switch.h"
  10          #include "dtos.h"
  11          
  12          void OLED_GPIO_Config() {
  13   1        GPIO_InitTypeDef conf;
  14   1        conf.Mode = GPIO_PullUp;
  15   1        conf.Pin = GPIO_Pin_4 | GPIO_Pin_5 | GPIO_Pin_6 | GPIO_Pin_7;
  16   1        GPIO_Inilize(GPIO_P1, &conf);
  17   1        
  18   1        conf.Pin = GPIO_Pin_4;
  19   1        GPIO_Inilize(GPIO_P4, &conf);
  20   1      }
  21          
  22          void OLED12864_Init() {
  23   1        OLED_GPIO_Config();
  24   1        OLED_Init();
  25   1      }
  26          
  27          void MOTOR_GPIO_Config() {
  28   1        GPIO_InitTypeDef conf;
  29   1        // conf.Mode = GPIO_OUT_PP;
  30   1        conf.Mode = GPIO_PullUp;
  31   1        conf.Pin = GPIO_Pin_All;
  32   1        GPIO_Inilize(GPIO_P6, &conf);
  33   1        
  34   1        conf.Pin = GPIO_Pin_0 | GPIO_Pin_1 | GPIO_Pin_2 | GPIO_Pin_3;
  35   1        GPIO_Inilize(GPIO_P7, &conf);
  36   1        
  37   1        conf.Pin = GPIO_Pin_0;
  38   1        GPIO_Inilize(GPIO_P2, &conf);
  39   1        
  40   1        conf.Pin = GPIO_Pin_0;
  41   1        GPIO_Inilize(GPIO_P4, &conf);
  42   1      }
  43          
  44          void KEY_GPIO_Config() {
  45   1        GPIO_InitTypeDef conf;
  46   1        conf.Mode = GPIO_PullUp;
  47   1        conf.Pin = GPIO_Pin_5;
  48   1        GPIO_Inilize(GPIO_P5, &conf);
  49   1      
  50   1        conf.Pin = GPIO_Pin_1;
  51   1        GPIO_Inilize(GPIO_P4, &conf);
  52   1      
  53   1        conf.Pin = GPIO_Pin_4 | GPIO_Pin_5 | GPIO_Pin_6;
  54   1        GPIO_Inilize(GPIO_P7, &conf);
C51 COMPILER V9.60.7.0   MAIN                                                              06/12/2023 16:27:01 PAGE 2   

  55   1      }
  56          
  57          void ADC_Init(void) {
  58   1        ADC_InitTypeDef ADC_InitStructure;    //结构定义
  59   1        ADC_InitStructure.ADC_SMPduty = 31;   //ADC 模拟信号采样时间控制, 0~31（注意： SMPDUTY 一定不能设置小于 10
             -）
  60   1        ADC_InitStructure.ADC_CsSetup = 0;    //ADC 通道选择时间控制 0(默认),1
  61   1        ADC_InitStructure.ADC_CsHold = 1;   //ADC 通道选择保持时间控制 0,1(默认),2,3
  62   1        ADC_InitStructure.ADC_Speed = ADC_SPEED_2X1T;   //设置 ADC 工作时钟频率 ADC_SPEED_2X1T~ADC_SPEED_2X16T
  63   1        ADC_InitStructure.ADC_AdjResult = ADC_RIGHT_JUSTIFIED;  //ADC结果调整,  ADC_LEFT_JUSTIFIED,ADC_RIGHT_JUSTIF
             -IED
  64   1        ADC_Inilize(&ADC_InitStructure);    //初始化
  65   1        ADC_PowerControl(ENABLE);           //ADC电源开关, ENABLE或DISABLE
  66   1        // NVIC_ADC_Init(DISABLE, Priority_0);    //中断使能, ENABLE/DISABLE; 优先级(低到高) Priority_0,Priority_1,
             -Priority_2,Priority_3
  67   1      }
  68          
  69          void main() {
  70   1        ADC_Init();
  71   1        OLED12864_Init();
  72   1      
  73   1        while(1) {
  74   2          xdata u16 adc = Get_ADCResult(CHANEL_ADC1);
  75   2          xdata float percentage;
  76   2          xdata u8 strP[10];
  77   2          xdata u8 strD[20];
  78   2          percentage = adc / 4096.f * 100.f;
  79   2          floatToSS(percentage, strP, 10, 2);
  80   2          sprintf(strD, "CHANEL1: %s", strP);
  81   2          // sprintf(strD, "CHANEL1");
  82   2          OLED_ShowString(0, 0, strD);
  83   2      
  84   2          adc = Get_ADCResult(CHANEL_ADC2);
  85   2          percentage = adc / 4096.f * 100.f;
  86   2          floatToSS(percentage, strP, 10, 2);
  87   2          sprintf(strD, "CHANEL2: %s", strP);
  88   2          OLED_ShowString(0, 2, strD);
  89   2      
  90   2          adc = Get_ADCResult(CHANEL_ADC3);
  91   2          percentage = adc / 4096.f * 100.f;
  92   2          floatToSS(percentage, strP, 10, 2);
  93   2          sprintf(strD, "CHANEL3: %s", strP);
  94   2          OLED_ShowString(0, 4, strD);
  95   2      
  96   2          adc = Get_ADCResult(CHANEL_ADC4);
  97   2          percentage = adc / 4096.f * 100.f;
  98   2          floatToSS(percentage, strP, 10, 2);
  99   2          sprintf(strD, "CHANEL4: %s", strP);
 100   2          OLED_ShowString(0, 6, strD);
 101   2        }
 102   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    633    ----
   CONSTANT SIZE    =     48    ----
   XDATA SIZE       =   ----      36
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.7.0   MAIN                                                              06/12/2023 16:27:01 PAGE 3   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
