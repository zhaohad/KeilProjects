C51 COMPILER V9.60.7.0   MAIN                                                              08/04/2023 23:06:36 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE src\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "stc8a8k64d4.H"
   2          #include "stc8a_gpio.H"
   3          #include "stc8a_spi.h"
   4          #include "stc8a_nvic.h"
   5          #include "typedef.h"
   6          #include "oled12864.h"
   7          #include "stc8a_adc.h"
   8          #include "stc8a_switch.h"
   9          #include "dtos.h"
  10          #include "STC8A_UART.h"
  11          
  12          
  13          xdata u8 g_received_buf[MAX_CHAR8_COL];
  14          
  15          void OLED_GPIO_Config() {
  16   1        xdata GPIO_InitTypeDef conf;
  17   1        conf.Mode = GPIO_PullUp;
  18   1        conf.Pin = GPIO_Pin_4 | GPIO_Pin_5 | GPIO_Pin_6 | GPIO_Pin_7;
  19   1        GPIO_Inilize(GPIO_P1, &conf);
  20   1        
  21   1        conf.Pin = GPIO_Pin_4;
  22   1        GPIO_Inilize(GPIO_P4, &conf);
  23   1      }
  24          
  25          void OLED12864_Init() {
  26   1        OLED_GPIO_Config();
  27   1        OLED_Init();
  28   1      }
  29          
  30          void UART_GPIO_Config() {
  31   1        xdata GPIO_InitTypeDef conf;
  32   1        conf.Mode = GPIO_PullUp;
  33   1        conf.Pin = GPIO_Pin_0 | GPIO_Pin_1;
  34   1        GPIO_Inilize(GPIO_P0, &conf);
  35   1      }
  36          
  37          
  38          void UART_config() {
  39   1        xdata COMx_InitDefine COMx_InitStructure; //结构定义
  40   1        //UART3_SW(P_UART);
  41   1        COMx_InitStructure.UART_Mode = UART_8bit_BRTx; //模式,   UART_ShiftRight,UART_8bit_BRTx,UART_9bit,UART_9b
             -it_BRTx
  42   1        COMx_InitStructure.UART_BRT_Use = BRT_Timer2; //使用波特率, BRT_Timer1, BRT_Timer2 (注意: 串口2固定使用BR
             -T_Timer2)
  43   1        COMx_InitStructure.UART_BaudRate = 9600ul; //波特率,     110 ~ 115200
  44   1        COMx_InitStructure.UART_RxEnable = ENABLE; //接收允许,   ENABLE或DISABLE
  45   1      
  46   1        UART_Configuration(UART3, &COMx_InitStructure); //初始化串口2 USART1,USART2,USART3,USART4
  47   1        NVIC_UART3_Init(ENABLE, Priority_1); //中断使能, ENABLE/DISABLE; 优先级(低到高) Priority_0,Priority_1,Pri
             -ority_2,Priority_3
  48   1      }
  49          
  50          xdata u8 recCnt = 0;
  51          xdata u8 rec[10];
C51 COMPILER V9.60.7.0   MAIN                                                              08/04/2023 23:06:36 PAGE 2   

  52          xdata u8 rec1[10];
  53          xdata u8 str[10];
  54          xdata u8 num[10];
  55          void on_UART_Rec_1Byte(u8 d) {
  56   1        COM3.B_RX_OK = 0;
  57   1        COM3.RX_TimeOut = TimeOutSet1;
  58   1        RX3_Buffer[COM3.RX_Cnt++] = d;
  59   1        if(COM3.RX_Cnt >= COM_RX3_Lenth) {
  60   2          COM3.RX_Cnt = 0;
  61   2        }
  62   1        COM3.B_RX_OK = 1;
  63   1        
  64   1        if (recCnt < 8) {
  65   2          rec[recCnt] = d;
  66   2          OLED_ShowHexBuf8(0, 2, rec, recCnt + 1);
  67   2        } else {
  68   2          rec1[recCnt - 8] = d;
  69   2          OLED_ShowHexBuf8(0, 3, rec1, recCnt - 8 + 1);
  70   2        }
  71   1        ++recCnt;
  72   1        
  73   1        uintToS(recCnt, num, 10);
  74   1        sprintf(str, "%s", num);
  75   1        OLED_ShowString(0, 6, str);
  76   1      }
  77          
  78          xdata u8 sentCnt = 0;
  79          void on_UART_Send_1Byte(u8 d) {
  80   1        xdata u8 a[10];
  81   1        xdata u8 b[10];
  82   1        sentCnt++;
  83   1        uintToS(sentCnt, b, 10);
  84   1        sprintf(a, "Sent %s", b);
  85   1        OLED_ShowString(0, 4, a);
  86   1      }
*** WARNING C280 IN LINE 79 OF src\main.c: 'd': unreferenced local variable
  87          
  88          void UART_Init() {
  89   1        COM3.TX_read = 0;
  90   1        COM3.RX_Cnt = 0;
  91   1        COM3.B_RX_OK = 0;
  92   1        COM3.RX_TimeOut = TimeOutSet1;
  93   1      
  94   1        g_onURAT_1Byte_CB = on_UART_Rec_1Byte;
  95   1        g_onSend_1Byte_CB = on_UART_Send_1Byte;
  96   1        UART_config();
  97   1      }
  98          
  99          void boot_delay() {
 100   1        xdata u8 t, i;
 101   1        for (i = 0; i < 1; ++i) {
 102   2          for (t = 0; t < 250; ++t) {
 103   3            delay_ms(10);
 104   3          }
 105   2        }
 106   1      }
 107          
 108          void copy_buf(u8 * dst, u8 l) {
 109   1        xdata u8 i;
 110   1        --l;
 111   1        for (i = 0; i < l; ++i) {
 112   2          if (i < COM3.RX_Cnt) {
C51 COMPILER V9.60.7.0   MAIN                                                              08/04/2023 23:06:36 PAGE 3   

 113   3            dst[i] = RX3_Buffer[i];
 114   3          } else {
 115   3            dst[i] = ' ';
 116   3          }
 117   2        }
 118   1        dst[l] = 0;
 119   1        COM3.RX_Cnt = 0;
 120   1        COM3.B_RX_OK = 0;
 121   1      }
 122          
 123          unsigned int check_sum(u8 * d, u8 cnt) {
 124   1        u8 i;
 125   1        unsigned int sum = 0;
 126   1        for (i = 0; i < cnt; ++i) {
 127   2          sum += d[i];
 128   2        }
 129   1        return -sum;
 130   1      }
 131          
 132          void main() {
 133   1        u8 i;
 134   1        xdata u8 cmd[] = {0x7e, 0xff, 0x06, 0x09, 0x00, 0x00, 0x02, 0xfe, 0xf0, 0xef};
 135   1        xdata u8 d[] = {0xff, 0x06, 0x03, 0x00, 0x00, 0x01};
 136   1        xdata char str[] = {0, 0, 0};
 137   1        unsigned int checksum = check_sum(d, 6);
 138   1        str[0] = (u8) (checksum >> 8);
 139   1        str[1] = (u8) checksum;
 140   1        OLED12864_Init();
 141   1        OLED_ShowString(0, 0, "Init...");
 142   1        
 143   1        OLED_ShowHexBuf8(0, 2, str, 2);
 144   1        
 145   1        UART_Init();
 146   1        EA = 1;
 147   1        
 148   1        boot_delay();
 149   1        OLED_ShowString(0, 0, "Init Done");
 150   1        
 151   1        for (i = 0; i < 10; ++i) {
 152   2          TX3_write2buff(cmd[i]);
 153   2        }
 154   1      
 155   1        while(1) {
 156   2        }
 157   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    735    ----
   CONSTANT SIZE    =     48    ----
   XDATA SIZE       =     58      55
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
